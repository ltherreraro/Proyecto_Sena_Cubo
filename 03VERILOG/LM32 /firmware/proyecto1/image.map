
Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0x8a8
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x1e8 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000120                irq_enable
                0x000000000000012c                irq_disable
                0x0000000000000138                irq_set_mask
                0x0000000000000140                irq_get_mask
                0x0000000000000148                jump
                0x000000000000014c                halt
                0x00000000000001d8                get_sp
                0x00000000000001e0                get_gp
 .text          0x00000000000001e8        0x0 main.o
 .text.startup  0x00000000000001e8       0xb8 main.o
                0x00000000000001e8                main
 .text          0x00000000000002a0      0x3f4 soc-hw.o
                0x00000000000002a0                tic_isr()
                0x00000000000002d4                isr_null()
                0x00000000000002d8                pwm_read()
                0x00000000000002f0                pwm_rd(unsigned char)
                0x000000000000030c                pwm_addr(unsigned int)
                0x0000000000000324                pwm_wr(unsigned char)
                0x0000000000000340                pwm_din(unsigned int)
                0x0000000000000358                cam_read()
                0x0000000000000370                cam_rd(unsigned int)
                0x0000000000000388                gpio_config_dir(unsigned int)
                0x00000000000003a0                gpio_write(unsigned int)
                0x00000000000003b8                gpio_read()
                0x00000000000003d0                irq_handler(unsigned int)
                0x000000000000042c                isr_init()
                0x0000000000000458                isr_register(int, void (*)())
                0x0000000000000474                isr_unregister(int)
                0x000000000000049c                msleep(unsigned int)
                0x00000000000004d4                nsleep(unsigned int)
                0x0000000000000508                tic_init()
                0x000000000000055c                uart_init()
                0x0000000000000560                uart_getchar()
                0x0000000000000588                uart_putchar(char)
                0x00000000000005b0                uart_putstr(char*)
                0x00000000000005e8                i2c_init()
                0x0000000000000610                i2c_write(char, char, char)
 .text          0x0000000000000694      0x130 pwm.o
                0x0000000000000694                pwm::pwm_sel(int, char, bool)
                0x0000000000000790                pwm::brazo(char)
 .text          0x00000000000007c4       0x34 timer.o
                0x00000000000007c4                timer::nsleep(int)
 .text          0x00000000000007f8       0xb0 uart.o
                0x00000000000007f8                uart::uart_init()
                0x00000000000007fc                uart::uart_getchar()
                0x0000000000000824                uart::uart_putchar(char)
                0x000000000000084c                uart::uart_putstr(char*)
                0x0000000000000884                uart::uart_getint()
                0x00000000000008a8                _etext = .

.rodata         0x00000000000008a8       0x88
                0x00000000000008a8                . = ALIGN (0x4)
                0x00000000000008a8                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst4   0x00000000000008a8       0x74 soc-hw.o
 .rodata.cst4   0x000000000000091c        0x4 timer.o
 .rodata.cst4   0x0000000000000920       0x10 uart.o
 *(.rodata1)
                0x0000000000000930                _erodata = .

.data           0x0000000000000930       0x18
                0x0000000000000930                . = ALIGN (0x4)
                0x0000000000000930                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000930        0x0 crt0ram.o
 .data          0x0000000000000930        0x0 main.o
 .data          0x0000000000000930       0x18 soc-hw.o
                0x0000000000000930                pwm
                0x0000000000000934                i2c0
                0x0000000000000938                cam
                0x000000000000093c                gpio0
                0x0000000000000940                timer0
                0x0000000000000944                uart0
 .data          0x0000000000000948        0x0 pwm.o
 .data          0x0000000000000948        0x0 timer.o
 .data          0x0000000000000948        0x0 uart.o
 *(.data1)
                0x0000000000000950                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000000000948                _edata = .

.bss            0x0000000000000948       0x84
                0x0000000000000948                . = ALIGN (0x4)
                0x0000000000000948                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000000948        0x0 crt0ram.o
 .bss           0x0000000000000948        0x0 main.o
 .bss           0x0000000000000948       0x84 soc-hw.o
                0x0000000000000948                tic_msec
                0x000000000000094c                isr_table
 .bss           0x00000000000009cc        0x0 pwm.o
 .bss           0x00000000000009cc        0x0 timer.o
 .bss           0x00000000000009cc        0x0 uart.o
 *(COMMON)
                0x00000000000009cc                _ebss = .
                0x00000000000009cc                _end = .
                0x0000000000000ffc                PROVIDE (_fstack = ((ORIGIN (ram) + LENGTH (ram)) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
LOAD pwm.o
LOAD timer.o
LOAD uart.o
OUTPUT(image elf32-lm32)

.debug_frame    0x0000000000000000      0x2c0
 .debug_frame   0x0000000000000000       0x34 main.o
 .debug_frame   0x0000000000000034      0x1b8 soc-hw.o
 .debug_frame   0x00000000000001ec       0x4c pwm.o
 .debug_frame   0x0000000000000238       0x24 timer.o
 .debug_frame   0x000000000000025c       0x64 uart.o

.debug_info     0x0000000000000000     0x162b
 .debug_info    0x0000000000000000      0x3e2 main.o
 .debug_info    0x00000000000003e2      0x722 soc-hw.o
 .debug_info    0x0000000000000b04      0x478 pwm.o
 .debug_info    0x0000000000000f7c      0x29e timer.o
 .debug_info    0x000000000000121a      0x411 uart.o

.debug_abbrev   0x0000000000000000      0x7ba
 .debug_abbrev  0x0000000000000000       0xf6 main.o
 .debug_abbrev  0x00000000000000f6      0x23a soc-hw.o
 .debug_abbrev  0x0000000000000330      0x1a2 pwm.o
 .debug_abbrev  0x00000000000004d2      0x114 timer.o
 .debug_abbrev  0x00000000000005e6      0x1d4 uart.o

.debug_aranges  0x0000000000000000       0xa0
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o
 .debug_aranges
                0x0000000000000040       0x20 pwm.o
 .debug_aranges
                0x0000000000000060       0x20 timer.o
 .debug_aranges
                0x0000000000000080       0x20 uart.o

.debug_ranges   0x0000000000000000       0x28
 .debug_ranges  0x0000000000000000       0x10 main.o
 .debug_ranges  0x0000000000000010       0x18 soc-hw.o

.debug_line     0x0000000000000000      0x84d
 .debug_line    0x0000000000000000       0xee main.o
 .debug_line    0x00000000000000ee      0x46d soc-hw.o
 .debug_line    0x000000000000055b      0x15c pwm.o
 .debug_line    0x00000000000006b7       0x94 timer.o
 .debug_line    0x000000000000074b      0x102 uart.o

.debug_str      0x0000000000000000      0x568
 .debug_str     0x0000000000000000      0x1a7 main.o
                                        0x1ec (size before relaxing)
 .debug_str     0x00000000000001a7      0x2be soc-hw.o
                                        0x4a3 (size before relaxing)
 .debug_str     0x0000000000000465       0x4e pwm.o
                                        0x252 (size before relaxing)
 .debug_str     0x00000000000004b3       0x23 timer.o
                                        0x1e5 (size before relaxing)
 .debug_str     0x00000000000004d6       0x92 uart.o
                                        0x27d (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 soc-hw.o
 .comment       0x0000000000000011       0x12 pwm.o
 .comment       0x0000000000000011       0x12 timer.o
 .comment       0x0000000000000011       0x12 uart.o

.debug_loc      0x0000000000000000      0x405
 .debug_loc     0x0000000000000000      0x15e soc-hw.o
 .debug_loc     0x000000000000015e      0x1ad pwm.o
 .debug_loc     0x000000000000030b       0x55 timer.o
 .debug_loc     0x0000000000000360       0xa5 uart.o
